import { Caller } from '../../interfaces/caller';
import { CollectionSchema } from '../../interfaces/schema';
import { SearchReplacer } from './types';
import CollectionDecorator from '../collection-decorator';
import PaginatedFilter from '../../interfaces/query/filter/paginated';
export default class SearchCollectionDecorator extends CollectionDecorator {
    replacer: SearchReplacer;
    replaceSearch(replacer: SearchReplacer): void;
    refineSchema(subSchema: CollectionSchema): CollectionSchema;
    refineFilter(caller: Caller, filter?: PaginatedFilter): Promise<PaginatedFilter>;
    private defaultReplacer;
    private static buildCondition;
    private static getFields;
    private static lenientFind;
}
//# sourceMappingURL=collection.d.ts.map